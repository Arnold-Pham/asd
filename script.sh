#!/bin/bash

RED="\e[31m"
GREEN="\e[32m"
YELLOW="\e[33m"
BLUE="\e[34m"
CYAN="\e[36m"
BOLD="\e[1m"
RESET="\e[0m"

set -e

echo -e "\n${BOLD}${BLUE}=============================================${RESET}"
echo -e "${BOLD}${BLUE}  üöÄ Initialisation du d√©ploiement  ${RESET}"
echo -e "${BOLD}${BLUE}=============================================${RESET}\n"

echo -e "${BOLD}${CYAN}üîç V√©rification de Terraform...${RESET}"
if ! command -v terraform &> /dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è  Terraform non trouv√©. Installation en cours...${RESET}"
    wget -O - https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
    sudo apt update && sudo apt install -y terraform
    echo -e "${GREEN}‚úÖ Terraform install√© avec succ√®s.${RESET}"
else
    echo -e "${GREEN}‚úÖ Terraform est d√©j√† install√©.${RESET}"
fi

echo -e "\n${BOLD}${CYAN}üîç V√©rification de Ansible...${RESET}"
if ! command -v ansible &> /dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è  Ansible non trouv√©. Installation en cours...${RESET}"
    sudo apt update && sudo apt install -y ansible
    echo -e "${GREEN}‚úÖ Ansible install√© avec succ√®s.${RESET}"
else
    echo -e "${GREEN}‚úÖ Ansible est d√©j√† install√©.${RESET}"
fi

echo -e "\n${BOLD}${BLUE}=============================================${RESET}"
echo -e "${BOLD}${BLUE}  üîë Configuration des cl√©s SSH  ${RESET}"
echo -e "${BOLD}${BLUE}=============================================${RESET}\n"

BASE_DIR=$(pwd)
TF_FOLDER="$BASE_DIR/Sun/Terraform"
ANSIBLE_FOLDER="$BASE_DIR/Sun/Ansible"
KEY_PATH="$TF_FOLDER/sun-key"
SSH_FOLDER="$HOME/.ssh"
NEW_KEY_PATH="$SSH_FOLDER/sun-key"
HOSTS_FILE="$ANSIBLE_FOLDER/hosts"

if [ ! -f "$KEY_PATH" ]; then
    echo -e "${YELLOW}üî® G√©n√©ration d'une nouvelle cl√© SSH...${RESET}"
    ssh-keygen -t rsa -b 4096 -m PEM -C "sun-key" -f "$KEY_PATH" -N ""
    echo -e "${GREEN}‚úÖ Cl√© SSH g√©n√©r√©e avec succ√®s.${RESET}"
else
    echo -e "${GREEN}üîë Cl√© SSH existante : $KEY_PATH${RESET}"
fi

echo -e "\n${BOLD}${BLUE}=============================================${RESET}"
echo -e "${BOLD}${BLUE}  üåç D√©ploiement de l'instance AWS  ${RESET}"
echo -e "${BOLD}${BLUE}=============================================${RESET}\n"

echo -e "${CYAN}üîÑ Initialisation de Terraform...${RESET}"
terraform -chdir="$TF_FOLDER" init

echo -e "\n${CYAN}üöÄ Application du plan Terraform...${RESET}"
terraform -chdir="$TF_FOLDER" apply -auto-approve
echo -e "\n${GREEN}‚úÖ D√©ploiement Terraform termin√©.${RESET}"

echo -e "\n${BOLD}${BLUE}=============================================${RESET}"
echo -e "${BOLD}${BLUE}  üåê R√©cup√©ration de l'IP publique  ${RESET}"
echo -e "${BOLD}${BLUE}=============================================${RESET}\n"

SUN_PUBLIC_IP=""
for i in {1..5}; do
    SUN_PUBLIC_IP=$(terraform -chdir="$TF_FOLDER" output -raw sun_public_ip)
    if [ -n "$SUN_PUBLIC_IP" ]; then
        echo -e "${CYAN}üåç IP r√©cup√©r√©e : ${SUN_PUBLIC_IP}${RESET}"
        break
    else
        echo -e "${YELLOW}üîÑ Tentative $i/5 pour r√©cup√©rer l'IP publique...${RESET}"
        sleep 10
    fi
done

if [ -n "$SUN_PUBLIC_IP" ]; then
    echo -e "[sun]\n$SUN_PUBLIC_IP" > "$HOSTS_FILE"
    echo -e "${GREEN}‚úÖ Fichier d'inventaire Ansible mis √† jour.${RESET}"
else
    echo -e "${RED}‚ùå Impossible de r√©cup√©rer l'IP publique apr√®s plusieurs tentatives.${RESET}"
    exit 1
fi

sleep 15

echo -e "\n${BOLD}${BLUE}=============================================${RESET}"
echo -e "${BOLD}${BLUE}  üöÄ Lancement du playbook Ansible  ${RESET}"
echo -e "${BOLD}${BLUE}=============================================${RESET}\n"

echo -e "${CYAN}üì¶ Ex√©cution du playbook Ansible...${RESET}\n"
if ! ansible-playbook -i "$HOSTS_FILE" --private-key "$NEW_KEY_PATH" "$ANSIBLE_FOLDER/install.yml" --ssh-common-args="-o StrictHostKeyChecking=accept-new"; then
    echo -e "${RED}‚ùå Le playbook Ansible a √©chou√©.${RESET}"
    exit 1
fi

echo -e "${GREEN}üéâ D√©ploiement termin√© avec succ√®s !${RESET}\n"
sleep 5
ssh -i "$KEY_PATH" ubuntu@$SUN_PUBLIC_IPs