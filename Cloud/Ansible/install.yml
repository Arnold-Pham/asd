---
- name: Install K3s on Master
  remote_user: ubuntu
  hosts: main
  become: yes

  tasks:
    - name: Install K3s server
      shell: |
        curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--disable traefik" sh -
      args:
        executable: /bin/bash
    
    - name: Changement de permissions
      command: chmod 644 /etc/rancher/k3s/k3s.yaml  

    - name: Get K3s Token
      shell: cat /var/lib/rancher/k3s/server/node-token
      register: k3s_token
      changed_when: false

- name: Déployer l'infrastructure sur Cloud
  remote_user: ubuntu
  hosts: one,two,thr
  become: true

  tasks:
    - name: Copier le script d'installation sur la machine
      copy:
        src: ./script.sh
        dest: /home/ubuntu/script.sh
        mode: '0755'

    - name: Exécuter le script
      command: bash /home/ubuntu/script.sh

    - name: Install K3s agent
      shell: |
        curl -sfL https://get.k3s.io | K3S_URL="https://192.168.0.10:6443" K3S_TOKEN="{{ hostvars['sun']['k3s_token'].stdout }}" sh -
      args:
        executable: /bin/bash

    - name: Enable and start k3s-agent service
      systemd:
        name: k3s-agent
        enabled: yes
        state: started

# - name: Install and Configure Nginx
#   remote_user: ubuntu
#   hosts: main
#   become: yes

#   tasks:
#     - name: Lancement de Kubernetes pour Jenkins et SonarQube
#       command: kubectl apply -f /home/ubuntu/Cloud/Ansible/jenqube-deployment.yml

#     - name: Install Nginx
#       apt:
#         name: nginx
#         state: present
#         update_cache: yes

#     - name: Backup existing default site config
#       command: cp /etc/nginx/sites-available/default /etc/nginx/sites-available/default.backup

#     - name: Copy new Nginx default site config as default.new
#       copy:
#         src: /home/ubuntu/Cloud/Ansible/default
#         dest: /etc/nginx/sites-available/default.new
#         mode: '0644'

#     - name: Check if sites-enabled/default is a symlink
#       stat:
#         path: /etc/nginx/sites-enabled/default
#       register: site_enabled

#     - name: Replace default config if no symlink issue
#       command: mv /etc/nginx/sites-available/default.new /etc/nginx/sites-available/default
#       when: not site_enabled.stat.islnk is defined or not site_enabled.stat.islnk

#     - name: Restart Nginx
#       systemd:
#         name: nginx
#         state: restarted
